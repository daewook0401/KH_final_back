-- 사용자 테이블
CREATE TABLE TB_MEMBER (
  MEMBER_NO VARCHAR2(32) DEFAULT (RAWTOHEX(SYS_GUID())) NOT NULL PRIMARY KEY,
  MEMBER_ID VARCHAR2(20) NOT NULL UNIQUE,
  MEMBER_PW VARCHAR2(60) NOT NULL,
  MEMBER_EMAIL VARCHAR2(100) NOT NULL UNIQUE,	
  MEMBER_NAME VARCHAR2(50) NOT NULL,
  MEMBER_NICKNAME VARCHAR2(50) NOT NULL UNIQUE,
  MEMBER_PH CHAR(13) UNIQUE,
  MEMBER_ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
  MEMBER_MODIFIED_DATE DATE,
  MEMBER_ROLE VARCHAR2(20) NOT NULL,
  MEMBER_SELFIE VARCHAR2(255),
  IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK (IS_ACTIVE IN ('Y', 'N')),
  IS_STORE_OWNER CHAR(1) DEFAULT 'N' CHECK (IS_STORE_OWNER IN ('Y', 'N'))
);
SELECT * FROM TB_MEMBER;
DELETE FROM TB_MEMBER WHERE MEMBER_EMAIL = '4330961081';

CREATE TABLE TB_TOKEN(
	TOKEN_NO VARCHAR2(32) DEFAULT (RAWTOHEX(SYS_GUID())) NOT NULL PRIMARY KEY,
	MEMBER_NO VARCHAR2(32) NOT NULL,
	REFRESH_TOKEN VARCHAR2(255) NOT NULL,
	EXPIRED_DATE TIMESTAMP NOT NULL,
	
	CONSTRAINT FK_TOKEN_MEMBER FOREIGN KEY(MEMBER_NO)
		REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE CASCADE
);
SELECT * FROM TB_TOKEN;

-- 이메일 인증
CREATE TABLE TB_EMAIL_AUTH(
  VERIFY_CODE_NO VARCHAR2(32) DEFAULT (RAWTOHEX(SYS_GUID())) NOT NULL PRIMARY KEY,
  MEMBER_EMAIL VARCHAR2(100) NOT NULL,
  VERIFY_CODE VARCHAR2(10) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL
);
-- 채팅방 테이블
CREATE TABLE TB_CHATTING_ROOM (
  ROOM_NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  MEMBER_NO NUMBER NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,

  CONSTRAINT FK_ROOM_MEMBER FOREIGN KEY(MEMBER_NO)
    REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE SET NULL
);

-- 채팅 목록
CREATE TABLE TB_CHATTING_LIST (
  CHAT_NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ROOM_NO NUMBER NOT NULL,
  MEMBER_NO NUMBER NOT NULL,
  CONTENT VARCHAR2(200) NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL

  CONSTRAINT FK_CHATTING_LIST_ROOM FOREIGN KEY(ROOM_NO)
    REFERENCES TB_CHATTING_ROOM(ROOM_NO) ON DELETE CASCADE
  CONSTRAINT FK_CHATTING_LIST_MEMBER FOREIGN KEY(MEMBER_NO)
    REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE SET NULL
);

-- 음식점 테이블
CREATE TABLE TB_RESTAURANT(
  RESTAURANT_NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  RESTAURANT_NAME VARCHAR2(50) NOT NULL,
  RESTAURANT_DESCRIPTION NULL,
  RESTAURANT_ADDRESS NOT NULL,
  RESTAURANT_POST_CODE NOT NULL,
  SIDO_NM VARCHAR2(20) NOT NULL,
  SGG_NM VARCHAR2(20) NULL,
  EMDONG_CD VARCHAR2(20) NOT NULL,
  TOT_REG_CD VARCHAR2(20) NOT NULL,
  RESTAURANT_MAP_X NOT NULL,
  RESTAURANT_MAP_Z NOT NULL,
  RESTAURANT_PHONE_NUMBER NULL,
  PHOTO_NO NUMBER NOT NULL,
  MEMBER_NO NUMBER NOT NULL,

  CONSTRAINT FK_RESTAURANT_PHOTO FOREIGN KEY(PHOTO_NO)
    REFERENCES TB_PHOTO_URL(PHOTO_NO) ON DELETE SET NULL,
  CONSTRAINT FK_RESTAURANT_MEMBER FOREIGN KEY(MEMBER_NO)
    REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE SET NULL
);

-- 리뷰
CREATE TABLE TB_REVIEW (
    REVIEW_NO       VARCHAR2(32) DEFAULT RAWTOHEX(SYS_GUID()) PRIMARY KEY,
    RESTAURANT_NO   VARCHAR2(32) NOT NULL,
    MEMBER_NO       VARCHAR2(32) NOT NULL,
    REVIEW_CONTENT  VARCHAR2(600),
    REVIEW_SCORE    NUMBER       NOT NULL,
    CREATE_DATE     DATE         DEFAULT SYSDATE NOT NULL,
    IS_ACTIVE       CHAR(1)      DEFAULT 'Y' NOT NULL CHECK (IS_ACTIVE IN ('Y', 'N')),

    CONSTRAINT FK_REVIEW_RESTAURANT FOREIGN KEY (RESTAURANT_NO)
        REFERENCES TB_RESTAURANT(RESTAURANT_NO),      
    CONSTRAINT FK_REVIEW_MEMBER FOREIGN KEY (MEMBER_NO)
        REFERENCES TB_MEMBER(MEMBER_NO)
);

-- 리뷰 사진 테이블
CREATE TABLE TB_REVIEW_PHOTO(
  REVIEW_PHOTO_NO VARCHAR2(32) DEFAULT RAWTOHEX(SYS_GUID()) PRIMARY KEY,
  REVIEW_NO VARCHAR2(32) NOT NULL,
  REVIEW_PHOTO_URL VARCHAR2(255),
  CONSTRAINT FK_REVIEW_PHOTO_REVIEW FOREIGN KEY(REVIEW_NO)
    REFERENCES TB_REVIEW(REVIEW_NO) ON DELETE CASCADE
)

-- 메뉴판
CREATE TABLE TB_MENU_BOARD(
  MENU_NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  RESTAURANT_NO NUMBER NOT NULL,
  MENU_NAME VARCHAR2(100) NOT NULL,
  MENU_PRICE NUMBER NOT NULL,
  MENU_DESC VARCHAR2(500) NULL,
  IS_ACTIVE CHAR(1) DEFAULT 'Y' CHECK( IS_ACTIVE IN ('Y','N')),
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  MENU_PHOTO_URL VARCHAR2(255) NULL,
  CONSTRAINT FK_MENU_RESTAURANT FOREIGN KEY(RESTAURANT_NO)
    REFERENCES TB_RESTAURANT(RESTAURANT_NO) ON DELETE CASCADE,
  CONSTRAINT FK_MENU_PHOTO FOREIGN KEY(PHOTO_NO)
    REFERENCES TB_PHOTO_URL(PHOTO_NO) ON DELETE SET NULL
);
SELECT 
      VERIFY_CODE_NO AS verifyCodeNo,
      MEMBER_EMAIL AS email,
      VERIFY_CODE AS verifyCode,
      CREATE_DATE AS createDate
    FROM TB_EMAIL_AUTH
    WHERE VERIFY_CODE = #{verifyCode}
    AND MEMBER_EMAIL = #{email}
    ORDER BY CREATE_DATE DESC
    FETCH FIRST 1 ROWS ONLY

SELECT * FROM TB_EMAIL_AUTH;
-- 음식점 태그
CREATE TABLE TB_TAG(
  TAG_NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  TAG_NAME VARCHAR2(20) NOT NULL
);

-- 음식점 종류
CREATE TABLE TB_RESTAURANT_TAG(
  RESTAURANT_TAG_NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  TAG_NO NUMBER NOT NULL,
  RESTAURANT_NO NUMBER NOT NULL,
  CONSTRAINT FK_RESTAURANT_TAG_TAG FOREIGN KEY(TAG_NO)
    REFERENCES TB_TAG(TAG_NO) ON DELETE CASCADE,
  CONSTRAINT FK_RESTAURANT_TAG_RESTAURANT FOREIGN KEY(RESTAURANT_NO)
    REFERENCES TB_RESTAURANT(RESTAURANT_NO) ON DELETE CASCADE
);

-- 리뷰 영수증 테이블
CREATE TABLE TB_BILL(
  BILL_NO VARCHAR2(32) DEFAULT RAWTOHEX(SYS_GUID()) PRIMARY KEY,
  REVIEW_NO VARCHAR2(32) NOT NULL,
  MEMBER_NO VARCHAR2(32) NOT NULL,
  RESTAURANT_NO VARCHAR2(32) NOT NULL,
  BILL_PASS CHAR(1) NOT NULL,
  BILL_PHOTO_URL VARCHAR2(255) NOT NULL,
  CONSTRAINT FK_BILL_MEMBER FOREIGN KEY(MEMBER_NO)
    REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE CASCADE,
  CONSTRAINT FK_BILL_RESTAURANT FOREIGN KEY(RESTAURANT_NO)
    REFERENCES TB_RESTAURANT(RESTAURANT_NO) ON DELETE CASCADE,
  CONSTRAINT FK_BILL_REVIEW FOREIGN KEY(REVIEW_NO)
    REFERENCES TB_REVIEW(REVIEW_NO) ON DELETE CASCADE
);

-- 운영 정보 테이블
CREATE TABLE TB_OPERATING_HOURS (
	OPERATING_HOURS_NO VARCHAR2(32) DEFAULT RAWTOHEX(SYS_GUID()) PRIMARY KEY,
	RESTAURANT_NO VARCHAR2(32) REFERENCES TB_RESTAURANT (RESTAURANT_NO),
	WEEKDAY VARCHAR2(20) NOT NULL,
	START_TIME VARCHAR2(20) NOT NULL,
	END_TIME VARCHAR2(20) NOT NULL,
	CREATE_DATE TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
	SEQUENCE NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL ,
	CONSTRAINT UQ_RESTAURANT_WEEKDAY UNIQUE (RESTAURANT_NO, WEEKDAY)
);

-- 브레이크 타임 테이블
CREATE TABLE TB_BREAKTIME (
  OPERATING_HOURS_NO VARCHAR2(32) PRIMARY KEY,
  BREAK_START_TIME   VARCHAR2(20) NOT NULL,
  BREAK_END_TIME     VARCHAR2(20) NOT NULL,
  CONSTRAINT FK_OPERATING_HOURS
    FOREIGN KEY (OPERATING_HOURS_NO)
    REFERENCES TB_OPERATING_HOURS (OPERATING_HOURS_NO)
);

-- 예약 가능한 시간 테이블
CREATE TABLE TB_AVAILABLE_TIME (
  OPERATING_HOURS_NO VARCHAR2(32) PRIMARY KEY REFERENCES TB_OPERATING_HOURS (OPERATING_HOURS_NO),
  RESERVATION_START_TIME VARCHAR2(20) NOT NULL,
  RESERVATION_END_TIME VARCHAR2(20) NOT NULL
);

-- 예약 내역 테이블
CREATE TABLE TB_RESERVATION_LIST (
  RESERVATION_NO VARCHAR2(32) DEFAULT RAWTOHEX(SYS_GUID()) PRIMARY KEY,
  RESTAURANT_NO VARCHAR2(32)  REFERENCES TB_RESTAURANT (RESTAURANT_NO),
  MEMBER_NO VARCHAR2(32) REFERENCES TB_MEMBER(MEMBER_NO),
  RESERVE_DAY VARCHAR2(20) NOT NULL,
  RESERVE_TIME VARCHAR2(20) NOT NULL,
  NUMBER_OF_GUESTS NUMBER NOT NULL,
  CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
  RESERVATION_STATUS VARCHAR2(20) 
);

-- 예약 설정 테이블
CREATE TABLE TB_RESERVATION_SETTING (
	RESTAURANT_NO VARCHAR2(32) PRIMARY KEY REFERENCES TB_RESTAURANT (RESTAURANT_NO),
	INTERVAL NUMBER NOT NULL,
	MAX_NUM NUMBER NOT NULL,
	MIN_NUM NUMBER NOT NULL,
	MAX_TEAM_NUM NUMBER NOT NULL,
	DESCRIPTION VARCHAR2(200)
);
